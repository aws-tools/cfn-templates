{
  "AWSTemplateFormatVersion": "2010-09-09", 

  "Description": "Flask + Python instance to run New Startup SignUp application using external data stores using 'Frozen Pizza' AMI deployment",

  "Parameters": {

    "InstanceType": {
      "Description": "EC2 instance type, e.g. m3.medium, m3.large, etc.",
      "Type": "String",
      "Default": "m3.medium"
    },
    
    "AmiLookupSnsTopicArn" : {
      "Description" : "SNS Topic ARN for AMI Lookup Custom Resource",
      "Type" : "String",
      "AllowedPattern" : "arn:aws:sns:.*",
      "ConstraintDescription" : "must be an SNS topic ARN"
    },

    "HashKey" : {
      "Description" : "String for hash key",
      "Type" : "String"
    },

    "RangeKey" : {
      "Description" : "Number for range key or string 'latest'",
      "Type" : "String",
      "Default" : "latest",
      "AllowedPattern" : "[0-9]*|latest",
      "ConstraintDescription" : "Range key must be a number or string 'latest'"
    },

    "DynamoDbAmiTable" : {
      "Description" : "AMI catalog DynamoDB table name",
      "Type" : "String",
      "Default" : "ami-lookup-table"
    }

  },

  "Resources": {

    "AppAccessDatastoreRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [ {
            "Effect": "Allow",
            "Principal": {
              "Service": [ "ec2.amazonaws.com" ]
            },
            "Action": [ "sts:AssumeRole" ]
          } ]
        },
        "Path": "/",
        "Policies": [ {
          "PolicyName": "AppAccess-Datastore",
          "PolicyDocument": {
            "Version": "2012-10-17",
            "Statement": [
              {
                "Effect": "Allow",
                "Action":   [ "dynamodb:PutItem" ],
                "Resource": [ "*" ]
              },
              {
                "Effect": "Allow",
                "Action":   [ "sns:Publish" ],
                "Resource": [ "*" ]
              }
            ]
          }
        } ]
      }
    },

    "AppAccessDatastoreInstanceProfile": {
      "Type": "AWS::IAM::InstanceProfile",
      "Properties": {
        "Path": "/",
        "Roles": [ {
          "Ref": "AppAccessDatastoreRole"
        } ]
      }
    },

    "ElbSecurityGroup" : {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription" : "Enable HTTP and HTTPS access to port 80 and 443 respectively",
        "SecurityGroupIngress": [ 
          { "CidrIp": "0.0.0.0/0", "FromPort": "80", "IpProtocol": "tcp", "ToPort": "80" },
          { "CidrIp": "0.0.0.0/0", "FromPort": "443", "IpProtocol": "tcp", "ToPort": "443" }
        ]
      }
    },

    "WebAppSecurityGroup" : {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription" : "Enable HTTP and HTTPS access to port 80 and 443 respectively",
        "SecurityGroupIngress" : [
          { "IpProtocol" : "tcp", "FromPort" : "80", "ToPort" : "80", "SourceSecurityGroupId" : { "Fn::GetAtt": [ "ElbSecurityGroup", "GroupId" ] } },
          { "IpProtocol" : "tcp", "FromPort" : "443", "ToPort" : "443", "SourceSecurityGroupId" : { "Fn::GetAtt": [ "ElbSecurityGroup", "GroupId" ] } } 
        ]
      }
    },

    "WebAppLoadBalancer": {
      "Type": "AWS::ElasticLoadBalancing::LoadBalancer",
      "Properties": {
        "AvailabilityZones": [ { "Fn::Select" : [ "0", { "Fn::GetAZs" : { "Ref" : "AWS::Region" } } ] }, { "Fn::Select" : [ "1", { "Fn::GetAZs" : { "Ref" : "AWS::Region" } } ] } ],
        "Listeners": [ {
          "LoadBalancerPort": "80",
          "InstancePort": "80",
          "Protocol": "HTTP"
        } ],
        "HealthCheck": {
          "Timeout": "5",
          "Target": "HTTP:80/",
          "Interval": "20",
          "HealthyThreshold": "3",
          "UnhealthyThreshold": "5"
        },
        "ConnectionDrainingPolicy": {
          "Enabled": true,
          "Timeout": 20
        },
        "CrossZone": true,
        "SecurityGroups" : [ { "Fn::GetAtt": [ "ElbSecurityGroup", "GroupId" ] } ]
      }
    },

    "GetAmi" : {
      "Type" : "Custom::AmiLookup",
      "Version" : "1.0",
      "Properties" : {
        "ServiceToken" : { "Ref" : "AmiLookupSnsTopicArn" },
        "region" : { "Ref" : "AWS::Region" },
        "table" : { "Ref" : "DynamoDbAmiTable" },
        "hash": { "Ref" : "HashKey" },
        "range": { "Ref" : "RangeKey" }
      }
    },

    "WebAppAutoScalingLaunchConfiguration" : {
      "DependsOn" : "GetAmi",
      "Type": "AWS::AutoScaling::LaunchConfiguration",
      "Properties": {
        "IamInstanceProfile": { "Ref" : "AppAccessDatastoreInstanceProfile" },
        "ImageId":  { "Ref" : "GetAmi" },
        "SecurityGroups": [ { "Fn::GetAtt": [ "WebAppSecurityGroup", "GroupId" ] } ],
        "InstanceType": { "Ref" : "InstanceType" },
        "UserData": {
          "Fn::Base64": {
            "Fn::Join": [ "", [
              "#!/bin/bash\n",

              "# Apply updates cfn-init bootstrapper helper scripts\n",
              "yum update -y aws-cfn-bootstrap\n",
              "/opt/aws/bin/cfn-init -s ", { "Ref" : "AWS::StackName" }, " -r WebAppAutoScalingLaunchConfiguration --region ", { "Ref" : "AWS::Region" }, " || echo 'Failed to run cfn-init'\n",
              "/opt/aws/bin/cfn-signal -e $? '", { "Ref" : "WaitConditionHandle" }, "'\n"
            ] ]
          }
        }
      }
    },

    "WebAppAutoScalingGroup" : {
      "Type": "AWS::AutoScaling::AutoScalingGroup",
      "Properties": {
        "AvailabilityZones": [ { "Fn::Select" : [ "0", { "Fn::GetAZs" : { "Ref" : "AWS::Region" } } ] }, { "Fn::Select" : [ "1", { "Fn::GetAZs" : { "Ref" : "AWS::Region" } } ] } ],
        "MaxSize": "10",
        "Cooldown": "360",
        "MinSize": "1",
        "LaunchConfigurationName": { "Ref": "WebAppAutoScalingLaunchConfiguration" },
        "LoadBalancerNames": [ { "Ref": "WebAppLoadBalancer" } ],
        "HealthCheckType": "ELB",
        "HealthCheckGracePeriod": "300",
        "Tags" : [ { "Key" : "Name", "Value" : "cfn-ami-lookup-flask-signup app instance", "PropagateAtLaunch": true } ]
      }
    },

    "WaitConditionHandle" : {
      "Type" : "AWS::CloudFormation::WaitConditionHandle"
    },

    "WaitCondition" : {
      "Type" : "AWS::CloudFormation::WaitCondition",
      "DependsOn" : "WebAppAutoScalingGroup",
      "Properties" : {
        "Count" : "1",
        "Handle" : { "Ref" : "WaitConditionHandle" },
        "Timeout" : "600"
      }
    }

  },

  "Outputs": {

    "WebAppUrl": {
      "Description": "The Flask SignUp web application URL",
      "Value": { "Fn::Join": ["", ["http:\/\/", { "Fn::GetAtt": [ "WebAppLoadBalancer", "DNSName" ] } ] ] }
    }

  }

}
